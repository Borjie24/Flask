from flask import Blueprint, send_from_directory

image_router = Blueprint("image_router", __name__)

@image_router.route("/assets/images/<filename>", methods=["GET"])
def get_image_url(filename):
    """
    Serve an image from the 'assets/images' directory.

    Args:
        filename (str): Name of the image file.

    Returns:
        Flask response: The requested image file or a 404 error if not found.
    """
    try:
        return send_from_directory('assets/images', filename)
    except FileNotFoundError:
        return {"error": "File not found"}, 404
----------------------
import os
import pytest
from flask import Flask
from src.image_router import image_router  # Replace with the actual path to your `image_router` module

@pytest.fixture
def app():
    """Create a Flask app instance for testing."""
    app = Flask(__name__)
    app.register_blueprint(image_router)
    yield app


@pytest.fixture
def client(app):
    """Create a test client for the Flask app."""
    return app.test_client()


def test_get_image_url_success(client, tmp_path):
    """
    Test that the get_image_url route successfully serves an image file.
    """
    # Create a temporary directory and add a mock image file
    assets_dir = tmp_path / "assets" / "images"
    assets_dir.mkdir(parents=True)
    image_path = assets_dir / "test_image.jpg"
    image_path.write_bytes(b"fake image content")

    # Patch the directory path for the test
    with patch("src.image_router.send_from_directory") as mock_send:
        mock_send.return_value = b"fake image content"

        # Make a GET request to the route
        response = (make HttpRequest find get option button such this
